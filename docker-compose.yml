services:
  db:
    image: postgres:17
    env_file: .env.${MODE}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: ["dev", "prod"]

  backend-codecheck:
    build: ./backend
    command: sh -c "black . && isort . && flake8 ."
    volumes:
      - ./backend:/app
    profiles: ["lint"]

  frontend-codecheck:
    build: ./frontend
    command: sh -c "eslint . --fix && prettier --write ."
    volumes:
      - ./frontend:/app
    profiles: ["lint"]

  backend:
    build: ./backend
    env_file: .env.${MODE}
    ports:
      - "8000:8000" 
    depends_on:
      db:
        condition: service_healthy
    profiles: ["dev", "prod"]

  frontend:
    build: ./frontend
    env_file: .env.${MODE}
    depends_on:
      - backend
    profiles: ["dev"]

  frontend-build:
    build: ./frontend
    command: npm run build
    volumes:
      - frontend-static:/app/.next
    profiles: ["prod"]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-${MODE}.conf:/etc/nginx/conf.d/default.conf
      - frontend-static:/usr/share/nginx/html
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    profiles: ["dev"]

  nginx-prod:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-${MODE}.conf:/etc/nginx/conf.d/default.conf
      - frontend-static:/usr/share/nginx/html
    depends_on:
      backend:
        condition: service_started
      frontend-build:
        condition: service_started
    profiles: ["prod"]

volumes:
  frontend-static: